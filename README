                          NerdyIsBack Plugin Framework

   The NerdyIsBack Plugin framework began as a collection of classes for
   managing custom post types, meta boxes, and taxonomies for WordPress.
   When I realized I was using the same four classes in almost every
   WordPress project I developed, I decided it was time to DRY things up a
   little. The NerdyIsBack Plugin Framework aims to build on the WordPress
   Plugin API (not replace it) and bring better support for
   object-oriented architecture to the plugin development process.

Objectives

    1. Ease object-oriented plugin development
    2. Encourage separation of code
    3. MVC implementation for WordPress administration panels

To do for version 0.4

     * NIB_Plugin base class: factory, instance manager, and base class
       for plugins
     * Models: empty class to be extended; changes to come in later
       versions?
     * Controllers implemented as command pattern
     * Single point-of-entry for Controllers, factory method added to
       NIB_Plugin, implemented in nib.php
          + Add functions to tie NIB_Controllers to WordPress menu system
            through nib.php

To do in future release:

     * Refactor the following libraries and implement a Factory object:
          + CustomPostType
          + CustomMetaBox
          + CustomTaxonomy
          + CustomOptionsPage
     * Create HTMLElement Composite class (and children) with Presenter
       object for HTML representation.
     * Refactor FormTablePresenter to utilize HTMLElement
